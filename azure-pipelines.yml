resources:
  repositories:
    - repository: rsg
      type: github
      name: RocketSurgeonsGuild/AzureDevopsTemplates
      ref: refs/tags/v0.4.5
      endpoint: github

variables:
  Configuration: Release
  Verbosity: Diagnostic
  DotNetVersion: "2.1.505"
  CakeVersion: "0.32.1"
  NuGetVersion: "4.9.2"
  Coverage: "$(Agent.BuildDirectory)/c"
  VstsCoverage: "$(Coverage)"
  Artifacts: $(Build.ArtifactStagingDirectory)
  VstsArtifacts: "$(Artifacts)"
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"

jobs:
  - job: GitVersion
    pool:
      vmImage: "VS2017-Win2016"
    steps:
      - template: gitversion/store.yml@rsg
        parameters:
          NuGetVersion: $(NuGetVersion)

  - job: macOS
    pool: 
      vmImage: "macOS-10.13"
    dependsOn: GitVersion
    variables:
      MONO_VERSION: 5_16_0
    steps:
      - template: ./.pipelines/init.yml
        parameters:
          Configuration: $(Configuration)
          Verbosity: $(Verbosity)
          CakeVersion: $(CakeVersion)
          DotNetVersion: $(DotNetVersion)
          NuGetVersion: $(NuGetVersion)
          pushNuget: false
      # - script: |
      #     SYMLINK=$(MONO_VERSION)
      #     MONOPREFIX=/Library/Frameworks/Mono.framework/Versions/$SYMLINK
      #     echo "##vso[task.setvariable variable=DYLD_FALLBACK_LIBRARY_PATH;]$MONOPREFIX/lib:/lib:/usr/lib:$DYLD_LIBRARY_FALLBACK_PATH"
      #     echo "##vso[task.setvariable variable=PKG_CONFIG_PATH;]$MONOPREFIX/lib/pkgconfig:$MONOPREFIX/share/pkgconfig:$PKG_CONFIG_PATH"
      #     echo "##vso[task.setvariable variable=PATH;]$MONOPREFIX/bin:$PATH"
      - script: |
          brew unlink mono
          brew install mono
        displayName: Use Mono $(MONO_VERSION) 
      - script: |
          chmod 755 ./build.sh
          ./build.sh
        displayName: 'Build'

  - job: Linux
    pool: 
      vmImage: "Ubuntu-16.04"
    dependsOn: GitVersion
    variables:
      MONO_VERSION: 5.16.0
    steps:
      - template: ./.pipelines/init.yml
        parameters:
          Configuration: $(Configuration)
          Verbosity: $(Verbosity)
          CakeVersion: $(CakeVersion)
          DotNetVersion: $(DotNetVersion)
          NuGetVersion: $(NuGetVersion)
          pushNuget: false
      # - script: |
      #     SYMLINK=$(MONO_VERSION)
      #     MONOPREFIX=/Library/Frameworks/Mono.framework/Versions/$SYMLINK
      #     echo "##vso[task.setvariable variable=DYLD_FALLBACK_LIBRARY_PATH;]$MONOPREFIX/lib:/lib:/usr/lib:$DYLD_LIBRARY_FALLBACK_PATH"
      #     echo "##vso[task.setvariable variable=PKG_CONFIG_PATH;]$MONOPREFIX/lib/pkgconfig:$MONOPREFIX/share/pkgconfig:$PKG_CONFIG_PATH"
      #     echo "##vso[task.setvariable variable=PATH;]$MONOPREFIX/bin:$PATH"
      - script: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          sudo apt install apt-transport-https ca-certificates
          echo "deb https://download.mono-project.com/repo/ubuntu preview-xenial main" | sudo tee /etc/apt/sources.list.d/mono-official-preview.list
          sudo apt update
          sudo apt install mono-devel
        displayName: Use Mono $(MONO_VERSION)
      - script: |
          chmod 755 ./build.sh
          ./build.sh
        displayName: 'Build'
      

  - job: Windows
    pool: 
      vmImage: "VS2017-Win2016"
    dependsOn: GitVersion
    steps:
      - template: ./.pipelines/init.yml
        parameters:
          Configuration: $(Configuration)
          Verbosity: $(Verbosity)
          CakeVersion: $(CakeVersion)
          DotNetVersion: $(DotNetVersion)
          NuGetVersion: $(NuGetVersion)
          pushNuget: false
      - script: .\build.ps1
