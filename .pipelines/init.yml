parameters:
  # Configuration: Release
  Verbosity: Normal
  DotNetVersion: "3.1.402"
  CakeVersion: "0.32.1"
  NuGetVersion: "4.9.2"
  MonoVersion: ''
steps:
  - task: DownloadBuildArtifacts@0
    displayName: "Download GitVersion Variables"
    inputs:
      specificBuildWithTriggering: true
      downloadType: single
      artifactName: gitversion
      pipelineId: GitVersion
      targetPath: "$(Build.ArtifactStagingDirectory)/gitversion/"
  - task: RocketSurgeonsGuild.variable-tools.DeserializeVariables.DeserializeVariables@1
    displayName: 'Deserialize GitVersion'
    inputs:
      jsonfiles: $(Build.ArtifactStagingDirectory)/gitversion/**/gitversion.json
  - task: UseDotNet@2
    displayName: Install dotnet $(DotNetVersion)
    inputs:
      packageType: 'sdk'
      version: ${{ parameters.DotNetVersion }}
  - task: DotNetCoreCLI@2
    displayName: 'dotnet install cake'
    inputs:
      command: custom
      custom: tool
      arguments: 'install -g Cake.Tool --version $(CakeVersion)'
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
    env:
      CakeVersion: ${{ parameters.CakeVersion }}
  - task: NuGetToolInstaller@0
    displayName: "Get NuGet"
    inputs:
      versionSpec: ${{ parameters.NuGetVersion }}
  - task: NuGetCommand@2
    displayName: 'Cake restore packages.config'
    inputs:
      command: custom
      feedsToUse: config
      arguments: install tools/packages.config -ExcludeVersion -OutputDirectory tools
  - ${{ if ne(parameters.MonoVersion, '') }}:
    - script: |
        curl -o mono.pkg https://download.mono-project.com/archive/$MONO_VERSION/macos-10-universal/MonoFramework-MDK-$MONO_VERSION.90.macos10.xamarin.universal.pkg
        sudo installer -pkg mono.pkg -target /
        sudo cp -rf /Library/Frameworks/Mono.framework/Versions/$MONO_VERSION/ /Library/Frameworks/Mono.framework/Versions/Current/
        MONOPREFIX=/Library/Frameworks/Mono.framework/Versions/$MONO_VERSION
        echo "##vso[task.setvariable variable=DYLD_FALLBACK_LIBRARY_PATH;]$MONOPREFIX/lib:/lib:/usr/lib:$DYLD_LIBRARY_FALLBACK_PATH"
        echo "##vso[task.setvariable variable=PKG_CONFIG_PATH;]$MONOPREFIX/lib/pkgconfig:$MONOPREFIX/share/pkgconfig:$PKG_CONFIG_PATH"
        echo "##vso[task.setvariable variable=PATH;]$MONOPREFIX/bin:$PATH"
      env:
        MONO_VERSION: ${{ parameters.MonoVersion }}
      displayName: Use Mono ${{ parameters.MonoVersion }}
      failOnStderr: false
